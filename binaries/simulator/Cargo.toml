[package]
name = "ec_fabrix"
version = "0.1.0"
authors = ["Alan Karp <alan@earthcomputing.io>"]
edition = "2018"
build = "build.rs"

[features]
simulator = []

[[bin]]
name = "simulator"
required-features = ["simulator"]
path = "src/simulator.rs"

[[test]]
name = "test"
test = true
path = "src/test.rs"

[dependencies]
backtrace = "0.3" # used in dumpstack.rs
#bimap = {version = "0.3.1", features = ["serde"]} # bi-directional hashmap h: H(A,B), h.get_by_left(a: A), h.get_by_right(b: B)
#bincode = "1.1.2" # for binary serialization
#chrono = { version = "0.4.3", features = ["serde"] }
crossbeam = "0.7.1"
#ditto = "0.2.0" # CRDT library
either = "1.5"
eval = "^0.4.1"
failure = "0.1.5"
#failure_derive = "0.1.0"
futures = "0.1.23" # used in dal.rs
#im = "13.0.0" # Fast cloneable collections
#indexmap = "1.0.1" # HashMap and HashSet that preserve order
#internment = "0.3.6"
lazy_static = "1.1.0"
#log = {version = "0.4.6", features = ["std", "serde"]} # Should use instead of my trace approach
multi_mut = "0.1"
rand = "0.5.4"
rdkafka = "0.17.0"
reqwest = "0.9.11"
#rusoto_s3 = "0.36.0" # Library for AWS S3
#schema = { path = "/Users/alan/Documents/Eclipse/schema" }  # JSON schema
#schema_derive = { path = "/Users/alan/Documents/Eclipse/schema-derive" }
serde = { version = "1.0.27", features = ["rc"] }
serde_derive = "1.0.27"
serde_json = "1.0.9"
strum = "0.15.0" # Enum operations
strum_macros = "0.15.0"
time = "0.1"
typetag = "0.1.2" # Serialize/Deserialize &dyn Trait
uuid = { version = "0.7.0", features = ["serde", "v4"] }
